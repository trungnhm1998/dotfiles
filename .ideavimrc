" unmap space, by default it will move the cursor to the left 1 char
nnoremap <space> <Nop>
let mapleader="\<Space>"

" ****************************************
" Vim Config
" ****************************************
" Greatest remap EVER!! 
" Let me explain, this remap while in visual mode
" will delete what is currently highlighted and replace it 
" with what is in the register BUT it will YANK (delete) it 
" to a VOID register. Meaning I still have what I originally had
" when I pasted. I don't loose the previous thing I YANKED!
vnoremap <leader>pp "_dP

" ******************************************
" REMAP Y and P for clipboard usages
" * for main clipboard
" + for vim clipboard?
" *****************************************
" noremap <Leader>y "*y
" noremap <Leader>p "*p
" noremap <Leader>Y "+y
" noremap <Leader>P "+p

" ****************************************
" Plugins
" ****************************************
set multiple-cursors
set commentary
set NERDTree
set easymotion
set surround
set showmode
set textobj-entire
set ReplaceWithRegister
set sneak
set highlightedyank
set which-key

" ****************************************
" Basic
" ****************************************
set number          " Line numbers
set relativenumber  " Relative line numbers
set hlsearch        " Highlight whole word when searching
set ignorecase      " Ignore case when searching...
set smartcase       " ...except when search query contains a capital letter
set scrolloff=5
set so=5
set history=1000
set incsearch
set nu
set hlsearch
set visualbell
set exchange
set clipboard=unnamed " Copy to system clipboard
set g:highlightedyank_highlight_duration = 500

" show relative line numbers in normal mode only
" augroup linea
"    autocmd!
"     autocmd InsertEnter * set norelativenumber
"     autocmd InsertLeave * set relativenumber
" augroup END

""" Idea specific settings ------------------
set notimeout
set showmode
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep

" ******************************************
" Remap Ctrl + h,j,k,l to move between windows
" *****************************************
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" remap gt and gT to move between tabs
nnoremap <S-h> gT
nnoremap <S-l> gt

map <leader>w <c-w>
map <leader>wd <c-w>c

" Fix multple cursor issue
" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence

" Note that the default <A-n> and g<A-n> shortcuts don't work on Mac due to dead keys.
" <A-n> is used to enter accented text e.g. Ã±
" Feel free to pick your own mappings that are not affected. I like to use <leader>
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences

" ******************************************
" Remap for idea features
" *****************************************
map <C-W>q :q<CR>
nnoremap <Leader>/ :nohl<CR>
map K <Action>(ShowHoverInfo)
map <leader>d <Action>(Debug)
map <leader>c <Action>(Stop)
map <leader>uz <Action>(ToggleDistractionFreeMode)
map <leader>ss <Action>(FileStructurePopup)
map <leader><space> <Action>(GotoFile)
map <leader>fT <Action>(ActivateTerminalToolWindow)
imap <C-/> <Action>(HideActiveWindow)
map <leader>cr <Action>(RenameElement)

map <leader>s <Action>(SelectInProjectView)
map <leader>a <Action>(Annotate)
map <leader>h <Action>(Vcs.ShowTabbedFileHistory)
map <S-Space> <Action>(GotoNextError)

map <leader>bd <Action>(CloseContent)
map <leader>bD <Action>(CloseAllEditors)
map <leader>bo <Action>(CloseAllEditorsButActive)

map <leader>uz <Action>(ToggleZenMode)

map <leader>db <Action>(ToggleLineBreakpoint)
map <leader>o <Action>(FileStructurePopup)
map <leader>ss <Action>(FileStructurePopup)

map gh <Action>(QuickJavaDoc)
map ge <Action>(ShowErrorDescription)
map gm <Action>(HideAllWindows)
map gr <Action>(FindUsages)
map gI <Action>(GotoImplementation)
map gpi <Action>(QuickImplementations)
map gpd <Action>(QuickImplementations)
map gq <Action>(ShowIntentionActions)
map gy <Action>(GotoTypeDeclaration)

map ]e <Action>(ReSharperGotoNextErrorInSolution)
map [e <Action>(ReSharperGotoPrevErrorInSolution)
map <C-/> <Action>(ActivateTerminalToolWindow)

" ******************************************
" Remap for conflicts
" *****************************************
sethandler <C-2> a:ide
sethandler <C-S-2> a:ide
sethandler <C-6> a:ide
sethandler <C-S-6> a:ide
sethandler <C-A> a:ide
sethandler <C-C> a:ide
sethandler <C-E> a:ide
sethandler <C-G> a:ide
sethandler <C-M> a:ide
sethandler <C-S> a:ide
sethandler <C-T> a:ide
sethandler <C-X> a:ide
sethandler <C-Y> a:ide
sethandler <C-[> a:ide
sethandler <C-\> a:ide
sethandler <C-]> a:ide
sethandler <C-P> a:ide
sethandler <S-j> a:ide

sethandler <C-H> n:vim i-x-v:ide
sethandler <C-J> n:vim i-x-v:ide
sethandler <C-K> n:vim i-x-v:ide
sethandler <C-L> n:vim i-x-v:ide
sethandler <C-I> a:vim
sethandler <C-B> a:vim
sethandler <C-D> a:vim
sethandler <C-F> n:vim i-x-v:ide 
sethandler <C-N> a:vim
sethandler <C-O> a:vim
sethandler <C-R> a:vim
sethandler <C-U> a:vim
sethandler <C-V> a:vim
sethandler <C-W> a:vim

" ******************************************
" NERD Tree Keybinding
" ******************************************
" Toggle NERDTree and go to file with Find
" map NERDTree to Ctrl+Shift+E
nnoremap <leader>e :NERDTreeToggle<CR>
